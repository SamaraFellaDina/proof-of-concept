<%- include('./partials/head') %>
<main class>
  <ol class="charts">
    
    <li>
      <section>
        <h2>Users in the last year</h2>
        <p class="charts-description">Which users have used our site, based on their country</p>
      </section>
      <canvas id="countryChart" class="chart" style="display: block;"></canvas>
    </li>

    <li>
      <section>
        <h2>browser of users</h2>
        <p class="charts-description">Which users have used our site, based on their users</p>
     </section>
      <canvas id="browserChart" class="chart" style="display: block;"></canvas>
    </li>

    <li>
      <section>
        <h2>device of users</h2>
        <p class="charts-description">Which users have used our site, based on their device</p>
      </section>
      <canvas id="devicesChart" class="chart" style="display: block;"></canvas>
    </li>

  </ol>

</main>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

  const colourTheme = [
    '#B9FFB7',
    '#FF7535',
    '#5E43FF',
    '#FF00FF',
    '#007BFF',
    '#FFC107'
  ];
  
  const borderColour = ['#302A2F;'];
  const borderWidth = 1.5;


  const chartOptions = {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
        y: {
            beginAtZero: true
        }
    }
};

  const country = document.getElementById('countryChart');
  function createCountryChart() {
    const countryData = <%- JSON.stringify(country.rows) %>;
    let otherValue = 0;
  
    const labels = [];
    const data = [];
  
    countryData.forEach(function(row) {
      const value = parseInt(row.metricValues[0].value);
      const label = row.dimensionValues[0].value;
  
      if (value < 40) {
        // Aggregate values for "Other" group

        otherValue += value;
      } else {
        labels.push(label);
        data.push(value);
      }
    });
  
    if (otherValue > 0) {
      labels.push('Other');
      data.push(otherValue);
    }
  
    new Chart(country, {
      type: 'bar',
      data: {
        labels: labels,
        datasets: [{
          label: 'Aantal keer bezocht',
          data: data,
          backgroundColor: colourTheme,
          borderWidth: borderWidth,
          borderColor: borderColour
        }]
      },
      options: chartOptions
    });
  }
  createCountryChart();
  
  const browser = document.getElementById('browserChart');
  function createBrowserChart() {
    const browserData = <%- JSON.stringify(browser.rows) %>;
  
  // Initialize variables for "Other" group
  let otherValue = 0;
  
  // Arrays to store labels and data
  const labels = [];
  const data = [];
  
  // Iterate through the data rows
  browserData.forEach(function(row) {
    const value = parseInt(row.metricValues[0].value);
    const label = row.dimensionValues[0].value;
  
    if (value < 15) {
      // Aggregate values for "Other" group
      otherValue += value;
    } else {
      // Add label and value to respective arrays
      labels.push(label);
      data.push(value);
    }
  });
  
  // Add "Other" group if it has data
  if (otherValue > 0) {
    labels.push('Other');
    data.push(otherValue);
  }
  
  // Create the chart
  new Chart(browser, {
    type: 'bar',
    data: {
      labels: labels,
      datasets: [{
        label: 'Aantal keer bezocht',
        data: data,
        backgroundColor: colourTheme,
        borderWidth: borderWidth,
        borderColor: borderColour
  
      }]
    },
    options: chartOptions
   });
  }
  createBrowserChart();
  
  const devices = document.getElementById('devicesChart');
  function createdevicesChart() {
    const devicesData = <%- JSON.stringify(devices.rows) %>;
  
    let otherValue = 0;
    
    const labels = [];
    const data = [];
  
    devicesData.forEach(function(row) {
      const value = parseInt(row.metricValues[0].value);
      const label = row.dimensionValues[0].value;
    
      if (value < 15) {
        otherValue += value;
      } else {
        labels.push(label);
        data.push(value);
      }
    });
    
    if (otherValue > 0) {
      labels.push('Other');
      data.push(otherValue);
    }
  
  // Create the chart
  new Chart(devices, {
    type: 'bar',
    data: {
      labels: labels,
      datasets: [{
        label: 'Aantal keer bezocht',
        data: data,
        backgroundColor: colourTheme,
        borderWidth: borderWidth,
        borderColor: borderColour
      }]
    },
    options: chartOptions
   });
  }
  createdevicesChart();

</script>


<!-- <ul>
  <% devices.rows.forEach(function(row) { %>
    <li><%= row.dimensionValues[0].value %>: <%= row.metricValues[0].value %></li>
  <% }) %>
</ul> -->
